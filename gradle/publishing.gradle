// if (!publishJars.toBoolean()) return

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def pomConfig = {
  name project.name
  description project.projectDescription
  url project.projectWebsiteUrl
  inceptionYear project.projectInceptionYear
  licenses {
    license([:]) {
      name 'The Apache Software License, Version 2.0'
      url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
      distribution 'repo'
    }
  }
}

publishing {
  publications {
    mavenCustom(MavenPublication) {
      from components.java
      // artifact sourceJar

      pom.withXml {
        // all dependencies should use the default scope (compile) but
        // Gradle insists in using runtime as default
        asNode().dependencies.dependency.each { dep ->
          if (dep.scope.text() == 'runtime') {
            dep.remove(dep.scope)
          }
        }
        asNode().children().last() + pomConfig
      }
    }
  }
}

jar {
  manifest {
    attributes(
        'Built-By': System.properties['user.name'],
        'Created-By': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString(),
        'Specification-Title': project.name,
        'Specification-Version': project.version,
        'Implementation-Title': project.name,
        'Implementation-Version': project.version,
    )
  }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

ext {
  bintrayUsername = properties.bintrayUsername
  bintrayApiKey = properties.bintrayApiKey
}

bintray {
  user = project.bintrayUsername
  key = project.bintrayApiKey
  publications = ['mavenCustom']
  pkg {
    repo = 'libs'
    userOrg = project.bintrayUsername
    name = rootProject.name
    desc = rootProject.projectDescription
    licenses = ['Apache-2.0']
    issueTrackerUrl = project.projectIssueTrackerUrl
    vcsUrl = project.projectVcsUrl
    publicDownloadNumbers = true
  }
}
